@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new LanguageModel { TwoLetterISOLanguageName = c.TwoLetterISOLanguageName, ThreeLetterISOLanguageName = c.ThreeLetterISOLanguageName, NativeName = c.NativeName })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<form id="selectLanguage" asp-controller="Home"
      asp-action="SetLanguage" asp-route-returnUrl="@returnUrl"
      method="post" class="form-horizontal" role="form">
    <select class="language_drop" name="culture" id="culture" style="width:300px;white-space: nowrap;" onchange="this.form.submit();" asp-for="@requestCulture.RequestCulture.UICulture.Name">
        @if (cultureItems != null)
        {
            foreach (var item in cultureItems)
            {
                var urlImg = $"/content/img/flag-{item.TwoLetterISOLanguageName}.jpg";
                <option style="white-space: nowrap;" value='@item.TwoLetterISOLanguageName' data-image="@urlImg" data-imagecss="flag yu"
                        data-title="@item.NativeName">
                  @item.ThreeLetterISOLanguageName.ToUpperInvariant()
                </option>
            }
        }
    </select>
</form>